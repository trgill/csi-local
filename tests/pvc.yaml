kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: springfield-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: springfield-csi
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
  namespace: default
  labels:
    app.kubernetes.io/name: my-pod
    app: example
spec:
  containers:
  - name: ubuntu
    image: quay.io/cybozu/ubuntu:20.04
    command: ["/usr/local/bin/pause"]
    volumeMounts:
    - mountPath: /test1
      name: my-volume
  volumes:
  - name: my-volume
    persistentVolumeClaim:
      claimName: springfield-pvc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: springfield-pvc-thin
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      # thin-pool size - 2G, with overprovision - 2G *10 and 10Gi ask should work
      storage: 10Gi
  storageClassName: springfield-csi
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod-thin
  namespace: default
  labels:
    app.kubernetes.io/name: my-pod-thin
    app: example
spec:
  containers:
  - name: ubuntu
    image: quay.io/cybozu/ubuntu:20.04
    command: ["/usr/local/bin/pause"]
    volumeMounts:
    - mountPath: /test1
      name: my-volume
  volumes:
  - name: my-volume
    persistentVolumeClaim:
      claimName: springfield-pvc-thin
---
apiVersion: v1
kind: Pod
metadata:
  name: my-pod-ephemeral
  namespace: default
  labels:
    app.kubernetes.io/name: my-pod-ephemeral
    app: example
spec:
  containers:
  - name: ubuntu
    image: quay.io/cybozu/ubuntu:20.04
    command: ["/usr/local/bin/pause"]
    volumeMounts:
    - mountPath: /test1
      name: my-volume
  volumes:
  - name: my-volume
    ephemeral:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: springfield-provisioner
